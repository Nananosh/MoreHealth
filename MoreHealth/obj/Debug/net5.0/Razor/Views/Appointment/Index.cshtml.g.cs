#pragma checksum "F:\Education\More\MoreHealth\MoreHealth\Views\Appointment\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "44989bf95fbe6f243fb6b5e96bdac5dd7b224a47"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Appointment_Index), @"mvc.1.0.view", @"/Views/Appointment/Index.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "F:\Education\More\MoreHealth\MoreHealth\Views\_ViewImports.cshtml"
using MoreHealth;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "F:\Education\More\MoreHealth\MoreHealth\Views\_ViewImports.cshtml"
using MoreHealth.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"44989bf95fbe6f243fb6b5e96bdac5dd7b224a47", @"/Views/Appointment/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"a3f4ac2e0e60d98d84c9441b1741d07565121ecb", @"/Views/_ViewImports.cshtml")]
    public class Views_Appointment_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral(@"<nav>
    <div class=""nav nav-tabs"" id=""nav-tab"" role=""tablist"">
        <a class=""nav-item nav-link active"" id=""nav-home-tab"" data-toggle=""tab"" href=""#nav-talon"" role=""tab"" aria-controls=""nav-home"" aria-selected=""true"">Талон</a>
        <a class=""nav-item nav-link"" id=""nav-profile-tab"" data-toggle=""tab"" href=""#nav-home"" role=""tab"" aria-controls=""nav-profile"" aria-selected=""false"">Врач на дом</a>
    </div>
</nav>

<div class=""tab-content"" id=""nav-tabContent"">
    <div class=""tab-pane fade show active"" id=""nav-talon"" role=""tabpanel"" aria-labelledby=""nav-home-tab"">
        <p></p>
        <input id=""doctor"" style=""width: 40%;"" />
        <p></p>
        <input id=""datepicker"" value=""11/12/2021"" title=""datepicker"" style=""width: 40%"" />
        <p></p>
        <input id=""talons"" style=""width: 40%;"" />
        <p></p>
        <input id=""address"" style=""width: 40%;"" />
        <p></p>
        <button id=""textButton"">Заказать</button>
    </div>
    <div class=""tab-pane fade"" id=""nav-home"" role=");
            WriteLiteral(@"""tabpanel"" aria-labelledby=""nav-profile-tab"">
        <input id=""address2"" style=""width: 40%;"" />
        <button id=""callingdoctorathome"">Заказать</button>
    </div>
</div>
<script>
    $(""#doctor"").kendoDropDownList({
        dataTextField: ""fullName"",
        dataValueField: ""id"",
        optionLabel: ""Выберите врача..."",
        height: 500,
        dataSource: {
            transport: {
                read: {
                    url: """);
#nullable restore
#line 40 "F:\Education\More\MoreHealth\MoreHealth\Views\Appointment\Index.cshtml"
                     Write(Url.Action("GetAllDoctors", "FeedBack"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@""",
                    dataType: ""json"",
                    cache: false
                }
            }
        }
    });

    $(""#datepicker"").kendoDatePicker({
        change: onChange
    })

    function onChange() {
        $(""#talons"").kendoDropDownList({
            dataTextField: ""getDate"",
            dataValueField: ""id"",
            optionLabel: ""Выберите талон"",
            height: 500,
            dataSource: {
                transport: {
                    read: {
                        url: """);
#nullable restore
#line 61 "F:\Education\More\MoreHealth\MoreHealth\Views\Appointment\Index.cshtml"
                         Write(Url.Action("GetTalonsByDoctorDate", "Appointment"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@""",
                        data: function () {
                            var datapicker = $(""#datepicker"").data(""kendoDatePicker"").value();
                            var t = kendo.toString(datapicker, ""dd/MM/yyyy"");
                            return {
                                doctor: $(""#doctor"").data(""kendoDropDownList"").value(),
                                talon1: kendo.toString(datapicker, ""dd/MM/yyyy"")
                            };
                        }
                    }

                }
            }
        });
    }

    $(""#address"").kendoTextBox({
        placeholder: ""Адрес"",
        label: {
            content: ""адрес"",
            floating: true
        }
    });

    $(""#address2"").kendoTextBox({
        placeholder: ""Адрес"",
        label: {
            content: ""адрес"",
            floating: true
        }
    });

    $(""#callingdoctorathome"").kendoButton({
        click: submitCalling
    });

    $(""#textButton"").kendoButton({
");
            WriteLiteral("        click: onClick\r\n    });\r\n\r\n    function submitCalling() {\r\n        const address = $(\"#address2\").data(\"kendoTextBox\").value()\r\n        console.log(address);\r\n        var userId = \"");
#nullable restore
#line 104 "F:\Education\More\MoreHealth\MoreHealth\Views\Appointment\Index.cshtml"
                 Write(User.Claims.ElementAt(0).Value);

#line default
#line hidden
#nullable disable
            WriteLiteral(@""";
        $.ajax({
            url: `/Appointment/CallingDoctorHome/?address=${address}&userid=${userId}`,
            type: 'post',
            success: function (response) {
                console.log(response)
                alert(response);
            },
            error: function (response) {
                alert(response);
            }
        });
    }

    function onClick() {
        const talonId = $(""#talons"").data(""kendoDropDownList"").value()
        const address = $(""#address"").data(""kendoTextBox"").value()
        var userId = """);
#nullable restore
#line 121 "F:\Education\More\MoreHealth\MoreHealth\Views\Appointment\Index.cshtml"
                 Write(User.Claims.ElementAt(0).Value);

#line default
#line hidden
#nullable disable
            WriteLiteral(@""";
        $.ajax({
            url: `/Appointment/AddPatientTalon/?talon=${talonId}&address=${address}&userid=${userId}`,
            type: 'post',
            success: function (response) {
                console.log(response)
                alert(response);
            },
            error: function (response) {
                alert(response);
            }
        });
    }


</script>
");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
